# ALL_PKGS is the list of all packages where ALL_SRC files reside.
ALL_PKGS := $(sort $(shell go list ./...))

GOTEST_OPT?= -race -timeout 120s
GOCMD?= go
GOTEST=$(GOCMD) test
GOOS := $(shell $(GOCMD) env GOOS)
GOARCH := $(shell $(GOCMD) env GOARCH)

TOOLS_MOD_DIR   := $(PWD)/internal/tools
TOOLS_BIN_DIR   := $(PWD)/.tools
TOOLS_MOD_REGEX := "\s+_\s+\".*\""
TOOLS_PKG_NAMES := $(shell grep -E $(TOOLS_MOD_REGEX) < $(TOOLS_MOD_DIR)/tools.go | tr -d " _\"" | grep -vE '/v[0-9]+$$')
TOOLS_BIN_NAMES := $(addprefix $(TOOLS_BIN_DIR)/, $(notdir $(shell echo $(TOOLS_PKG_NAMES))))

ADDLICENSE  := $(TOOLS_BIN_DIR)/addlicense
APIDIFF     := $(TOOLS_BIN_DIR)/apidiff
CHECKDOC    := $(TOOLS_BIN_DIR)/checkdoc
CHLOG       := $(TOOLS_BIN_DIR)/chloggen
CROSSLINK   := $(TOOLS_BIN_DIR)/crosslink
GO_ACC      := $(TOOLS_BIN_DIR)/go-acc
GOCOVMERGE  := $(TOOLS_BIN_DIR)/gocovmerge
GOIMPORTS   := $(TOOLS_BIN_DIR)/goimports
GOVULNCHECK := $(TOOLS_BIN_DIR)/govulncheck
LINT        := $(TOOLS_BIN_DIR)/golangci-lint
IMPI        := $(TOOLS_BIN_DIR)/impi
MISSPELL    := $(TOOLS_BIN_DIR)/misspell
MULTIMOD    := $(TOOLS_BIN_DIR)/multimod
PORTO       := $(TOOLS_BIN_DIR)/porto
YQ          := $(TOOLS_BIN_DIR)/yq

GH := $(shell which gh)

.PHONY: install-tools
install-tools: $(TOOLS_BIN_NAMES) $(YQ)

$(TOOLS_BIN_DIR):
	mkdir -p $@

$(TOOLS_BIN_NAMES): $(TOOLS_BIN_DIR) $(TOOLS_MOD_DIR)/go.mod
	cd $(TOOLS_MOD_DIR) && $(GOCMD) build -o $@ -trimpath $(filter %/$(notdir $@),$(TOOLS_PKG_NAMES))

$(YQ): $(TOOLS_BIN_DIR) $(TOOLS_MOD_DIR)/go.mod
	cd $(TOOLS_MOD_DIR) && $(GOCMD) build -o $@ -trimpath github.com/mikefarah/yq/v4

.PHONY: test
test:
	$(GOTEST) $(GOTEST_OPT) ./...

.PHONY: test-with-cover
test-with-cover: $(GO_ACC)
	$(GO_ACC) --output=coverage.out ./...

.PHONY: benchmark
benchmark:
	$(GOTEST) -bench=. -run=notests ./...

.PHONY: fmt
fmt: $(GOIMPORTS)
	gofmt -w -s ./
	$(GOIMPORTS) -w  -local go.opentelemetry.io/collector ./

.PHONY: tidy
tidy:
	rm -fr go.sum
	$(GOCMD) mod tidy -compat=1.19

.PHONY: lint
lint: $(LINT)
	$(LINT) run

.PHONY: govulncheck
govulncheck: $(GOVULNCHECK)
	$(GOVULNCHECK) ./...

.PHONY: generate
generate:
	$(GOCMD) generate ./...

.PHONY: impi
impi: $(IMPI)
	@$(IMPI) --local go.opentelemetry.io/collector --scheme stdThirdPartyLocal ./...

.PHONY: moddownload
moddownload:
	$(GOCMD) mod download
